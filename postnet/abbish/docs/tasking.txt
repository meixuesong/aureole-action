#1 Main
[IN]
  Context:
    router: Router

#1.1 render
[IN]
  Props:
    children: [Component]
  Component:
    Link: Component
[OUT]
  render: VDOM
[TEST]
  should has link for goto zip code convert to barcode page
  should has link for barcode convert to zip code page

#2 ZipCodeToBarcode
[OUT]
  State:
    zipCode: String
    barcode: String
    message: String
[TEST]
    should defined zipCode state with default value null
    should defined barcode state with default value null
    should defined message state with default value null

#2.1 render
[IN]
  Component:
    input: Component
    button: Component
  State:
    barcode: String
    message: String
[OUT]
  Callback:
    takeZipCode: Function
    generateBarcode: Function
  render: VDOM
[TEST]
  should has input for take user input zip code
  should has button for trigger barcode generator
  should display message when state message is not empty
  should display barcode when state barcode is not empty
  should not display barcode when state message is not empty

#2.1.1.1 takeZipCode
[IN]
  Params:
    zipCode: String
  Function Call:
    setState: Function
[OUT]
  Params:
    zipCode: String
  State:
    zipCode: String
[TEST]
    should set input value to state zip code when input zip code
    [12345] -> [12345]
    should clear state message when input zip code
    should set input value as string when input zip code type is number

#2.1.2.1 generateBarcode
[IN]
  State:
    zipCode: String
  Function call:
    encodeZipCode: String
[OUT]
  State:
    barcode: String
    message: String
[TEST]
    should set generated barcode to state barcode when call encodeZipCode
    [12345] -> [12345]
    should set error message to state message when call function encodeZipCode and return value is empty
    [12345] -> [Invalid zip code]
    should clear state message when generated valid barcode

#2.1.2.1.1 encodeZipCode
[IN]
  Params:
    zipCode: String
[OUT]
  barcode: String
[TEST]
  should return barcode when given zip code
  [45056-1234] -> [|:|::|:|:|:||::::|:|::||:::::||::|:|::||::|::|||:::|]

  #validateZipCode
  [IN]
    Params:
      zipCode: String
  [OUT]
    isValid: Boolean
  [TEST]
    should return true when given valid zip code
    [12345] -> [true]
    [12345-1234] -> [true]
    [123451234] -> [true]
    should return false when given invalid zip code
    [1234] -> [false]
    [1234567890] -> [false]
    [1234-56789] -> [false]
    [12345-678] -> [false]

  #parseZipCode
    [IN]
      Params:
        zipCode: String
    [OUT]
      parsedZipCode: String
    [TEST]
      should return parsedZipCode when given zip code
      [12345] -> [12345]
      [12345-1234] -> [123451234]

  #generateCheckDigit
  [IN]
    Params:
      parsedZipCode: [String]
  [OUT]
    checkDigit: String
  [TEST]
    should return check digit when given parsed zip code
    [45056-1234] -> [0]

  #encodeZipCodeString
  [IN]
    Params:
      parsedZipCode: [String]
      checkDigit: String
  [OUT]
    barcode: String
  [TEST]
    should return barcode when given parsed zip code and check digit
    [450561234, 0] -> [|:|::|:|:|:||::::|:|::||:::::||::|:|::||::|::|||:::|]


#3 BarcodeToZipCode
[OUT]
  State:
    barcode: Null
    zipCode: Null
    message: Null
[TEST]
    should defined barcode state with default value null
    should defined zipCode state with default value null
    should defined message state with default value null

#3.1 render
[IN]
  input: Component
  button: Component
[OUT]
  Callback:
    takeBarcode: Function
    generateZipCode: Function
  render: VDOM
[TEST]
  should has input for take user input barcode
  should has button for trigger zip code generator

#3.1.1.1 takeBarcode
[IN]
  Params:
    barcode: String
  Function Call:
    setState: Function
[OUT]
  Params:
    barcode: String
  State:
    barcode: String
[TEST]
  should set input value to state barcode when input barcode
  should clear state message and zip code when input barcode


#3.1.2.1 generateZipCode
[IN]
  State:
    barcode: String
[OUT]
  State:
    zipCode: String
    message: String
[TEST]
  should set generated zip code to state zipCode when call decodeBarcode
  should set error message to state message when call function decodeBarcode and return value is empty
  should clear state message when generated valid zip code


#3.1.2.1.1 decodeBarcode
[IN]
  Params:
    barcode: String
[OUT]
  zipCode: String
[TEST]
  should return zipCode when given barcode
  [|:|::|:|:|:||::::|:|::||:::::||::|:|::||::|::|||:::|] -> [45056-1234]

  #validateBarcode
  [IN]
    barcode: String
  [OUT]
    isValid: Boolean
  [TEST]
    should return true when given valid barcode
    [|:|::|:|:|:||::::|:|::||:::::||::|:|::||::|::|||:::|] -> [true]
    should return false when given invalid barcode
    [:|::|:|:|:||::::|:|::||:::::||::|:|::||::|::|||:::] -> [false]
    [|:|::|:||::::|:|::||:::::||::|:|::||::|::|||:::|] -> [false]

  #generateBarcodeString
  [IN]
    Params:
      barcode: String
  [OUT]
    barcodeString: [String]
  [TEST]
    should return array contains every word of barcode when given barcode
    [|:|::|:|:|:||::::|:|::||:::::||::|:|::||::|::|||:::|] -> [:|::|, :|:|:, ||:::, :|:|:, :||::, :::||, ::|:|, ::||:, :|::|, ||:::]

  #decodeBarcodeString
  [IN]
    Params:
      barcodeString: [String]
  [OUT]
    zipCodeString: [String]
  [TEST]
    should return array contains every word of zip code decoded from barcode when given barcode
    [:|::|, :|:|:, ||:::, :|:|:, :||::, :::||, ::|:|, ::||:, :|::|, ||:::] -> [4,5,0,5,6,1,2,3,4,0]

  #validateCheckDigit
  [IN]
    zipCodeString: [String]
  [OUT]
    isValid: Boolean
  [TEST]
    should return true when given valid zip code string
    [1,2,3,4,5,5] -> [true]
    should return false when given invalid zip code string
    [1,2,3,4,5,0] -> [false]

  #formatZipCode
  [IN]
    zipCodeString: [String]
  [OUT]
    zipCode: String
  [TEST]
    should return formatted zip code when given zip code string
    [1,2,3,4,5,0] -> [12345]
    [1,2,3,4,5,6,7,8,9,5] -> [12345-6789]

